{"ast":null,"code":"export class CookingSession {\n  static async list(sortBy, limit) {\n    // Mock implementation - replace with actual API call\n    return [{\n      id: '1',\n      rice_type: 'Jasmine',\n      rice_amount: 200,\n      water_amount: 300,\n      cooking_time: 25,\n      status: 'completed',\n      created_date: '2024-01-15T10:30:00Z',\n      completed_at: '2024-01-15T10:55:00Z'\n    }, {\n      id: '2',\n      rice_type: 'Basmati',\n      rice_amount: 150,\n      water_amount: 225,\n      cooking_time: 20,\n      status: 'completed',\n      created_date: '2024-01-14T18:00:00Z',\n      completed_at: '2024-01-14T18:20:00Z'\n    }, {\n      id: '3',\n      rice_type: 'Brown',\n      rice_amount: 180,\n      water_amount: 360,\n      cooking_time: 45,\n      status: 'active',\n      created_date: '2024-01-15T12:00:00Z'\n    }];\n  }\n  static async create(data) {\n    // Mock implementation - replace with actual API call\n    const session = {\n      id: Date.now().toString(),\n      rice_type: data.rice_type || '',\n      rice_amount: data.rice_amount || 0,\n      water_amount: data.water_amount || 0,\n      cooking_time: data.cooking_time || 0,\n      status: data.status || 'active',\n      created_date: new Date().toISOString()\n    };\n    console.log('Created cooking session:', session);\n    return session;\n  }\n}","map":{"version":3,"names":["CookingSession","list","sortBy","limit","id","rice_type","rice_amount","water_amount","cooking_time","status","created_date","completed_at","create","data","session","Date","now","toString","toISOString","console","log"],"sources":["/Users/YehonatanShapira/Documents/Coding/rice-cooker/src/entities/CookingSession.ts"],"sourcesContent":["export interface CookingSession {\n  id: string;\n  rice_type: string;\n  rice_amount: number;\n  water_amount: number;\n  cooking_time: number;\n  status: 'completed' | 'active' | 'cancelled';\n  created_date: string;\n  completed_at?: string;\n}\n\nexport class CookingSession {\n  static async list(sortBy: string, limit: number): Promise<CookingSession[]> {\n    // Mock implementation - replace with actual API call\n    return [\n      {\n        id: '1',\n        rice_type: 'Jasmine',\n        rice_amount: 200,\n        water_amount: 300,\n        cooking_time: 25,\n        status: 'completed',\n        created_date: '2024-01-15T10:30:00Z',\n        completed_at: '2024-01-15T10:55:00Z'\n      },\n      {\n        id: '2',\n        rice_type: 'Basmati',\n        rice_amount: 150,\n        water_amount: 225,\n        cooking_time: 20,\n        status: 'completed',\n        created_date: '2024-01-14T18:00:00Z',\n        completed_at: '2024-01-14T18:20:00Z'\n      },\n      {\n        id: '3',\n        rice_type: 'Brown',\n        rice_amount: 180,\n        water_amount: 360,\n        cooking_time: 45,\n        status: 'active',\n        created_date: '2024-01-15T12:00:00Z'\n      }\n    ];\n  }\n\n  static async create(data: Partial<CookingSession>): Promise<CookingSession> {\n    // Mock implementation - replace with actual API call\n    const session: CookingSession = {\n      id: Date.now().toString(),\n      rice_type: data.rice_type || '',\n      rice_amount: data.rice_amount || 0,\n      water_amount: data.water_amount || 0,\n      cooking_time: data.cooking_time || 0,\n      status: data.status || 'active',\n      created_date: new Date().toISOString()\n    };\n    \n    console.log('Created cooking session:', session);\n    return session;\n  }\n}\n"],"mappings":"AAWA,OAAO,MAAMA,cAAc,CAAC;EAC1B,aAAaC,IAAIA,CAACC,MAAc,EAAEC,KAAa,EAA6B;IAC1E;IACA,OAAO,CACL;MACEC,EAAE,EAAE,GAAG;MACPC,SAAS,EAAE,SAAS;MACpBC,WAAW,EAAE,GAAG;MAChBC,YAAY,EAAE,GAAG;MACjBC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,WAAW;MACnBC,YAAY,EAAE,sBAAsB;MACpCC,YAAY,EAAE;IAChB,CAAC,EACD;MACEP,EAAE,EAAE,GAAG;MACPC,SAAS,EAAE,SAAS;MACpBC,WAAW,EAAE,GAAG;MAChBC,YAAY,EAAE,GAAG;MACjBC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,WAAW;MACnBC,YAAY,EAAE,sBAAsB;MACpCC,YAAY,EAAE;IAChB,CAAC,EACD;MACEP,EAAE,EAAE,GAAG;MACPC,SAAS,EAAE,OAAO;MAClBC,WAAW,EAAE,GAAG;MAChBC,YAAY,EAAE,GAAG;MACjBC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,QAAQ;MAChBC,YAAY,EAAE;IAChB,CAAC,CACF;EACH;EAEA,aAAaE,MAAMA,CAACC,IAA6B,EAA2B;IAC1E;IACA,MAAMC,OAAuB,GAAG;MAC9BV,EAAE,EAAEW,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBZ,SAAS,EAAEQ,IAAI,CAACR,SAAS,IAAI,EAAE;MAC/BC,WAAW,EAAEO,IAAI,CAACP,WAAW,IAAI,CAAC;MAClCC,YAAY,EAAEM,IAAI,CAACN,YAAY,IAAI,CAAC;MACpCC,YAAY,EAAEK,IAAI,CAACL,YAAY,IAAI,CAAC;MACpCC,MAAM,EAAEI,IAAI,CAACJ,MAAM,IAAI,QAAQ;MAC/BC,YAAY,EAAE,IAAIK,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;IACvC,CAAC;IAEDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEN,OAAO,CAAC;IAChD,OAAOA,OAAO;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}